<ui:composition
        xmlns="http://www.w3.org/1999/xhtml"
        xmlns:h="http://java.sun.com/jsf/html"
        xmlns:ui="http://java.sun.com/jsf/facelets"
        xmlns:p="http://primefaces.org/ui"
        xmlns:f="http://java.sun.com/jsf/core"
        template="baseTemplate.xhtml"
        >

<ui:define name="head">
</ui:define>

<ui:define name="content">

    <p:ajaxStatus>
        <f:facet name="default">
            <h:outputText value="Idle" style="visibility: hidden; height: 20px;"/>
        </f:facet>

        <f:facet name="start">
            <h:outputText value="Loading..." style="height: 20px;"/>
        </f:facet>

        <f:facet name="complete">
            <h:outputText value="Idle" style="visibility: hidden; height: 20px;"/>
        </f:facet>

        <f:facet name="error">
            <h:outputText value="Error occurred!" style="color: red; height: 20px;"/>
        </f:facet>

    </p:ajaxStatus>

    <h:form id="sideForm" prependId="false">
        <div class="row">
            <!--static position is required in the following, else position information on canvas is calculated wrong-->
            <div class="col-md-9" style="position: static;">
                <div id="annotationDivs"></div>
                <canvas id="annotationCanvas"></canvas>
            </div>
            <div class="col-md-3">
                <p:panelGrid style="width: 100%;">

                    <p:row>
                        <p:column>
                            <p:outputLabel for="currentFile" value="Current File"/>
                        </p:column>
                        <p:column>
                            <h:selectOneMenu id="currentFile" value="#{annotatorData.currentFileId}">
                                <f:selectItems value="#{annotator.allFileIds}" var="fileId" itemLabel="#{fileId}"
                                               itemValue="#{fileId}"/>
                                <p:ajax process="@this" update="@form :scriptContainer"
                                        listener="#{annotator.onFileSelect}"/>
                            </h:selectOneMenu>
                        </p:column>
                    </p:row>

                    <p:row>
                        <p:column>
                            <p:outputLabel for="currentPage" value="Current Page"/>
                        </p:column>
                        <p:column>
                            <h:inputText id="currentPage" value="#{annotatorData.currentPageNumber}"
                                         style="width: 50px;">
                                <p:ajax process="@this" update="@form :scriptContainer"
                                        listener="#{annotator.onPageSelect}"/>
                            </h:inputText>

                            <h:outputFormat value="of {0}" style="white-space: nowrap;">
                                <f:param value="#{annotator.numberOfPagesForCurrentFile()}"/>
                            </h:outputFormat>
                        </p:column>
                    </p:row>

                    <p:row>
                        <p:column colspan="2">
                            <p:commandLink value="← Previous page" action="#{annotator.previousPage}"
                                           disabled="#{not annotator.previousPageAvailable}"
                                           process="@this" update="@form :scriptContainer"
                                           style="float: left;"/>

                            <p:commandLink value="Next page →" action="#{annotator.nextPage}"
                                           disabled="#{not annotator.nextPageAvailable}"
                                           process="@this" update="@form :scriptContainer"
                                           style="float: right;"/>
                        </p:column>
                    </p:row>

                    <p:row>
                        <p:column colspan="2">
                            <p:commandLink value="Force flush" action="#{annotator.forceFlush}"
                                           process="@this" update="@this"/>
                        </p:column>
                    </p:row>

                </p:panelGrid>

                <br/>
                <br/>

                <h:panelGroup id="annotationInputContainer">
                    <p:focus for="tr_arabic"/>
                    <p:panelGrid columns="1" rendered="#{not empty annotationForm.current}">
                        <h:outputLabel value="Id"/>
                        <h:outputText value="#{annotationForm.current.annotationId}"/>

                        <h:outputLabel value="TR_ARABIC"/>
                        <h:inputText id="tr_arabic" required="true" value="#{annotationForm.current.tr_arabic}" dir="RTL"/>

                        <h:outputLabel value="TR_LATIN"/>
                        <h:inputText value="#{annotationForm.current.tr_latin}"/>

                        <h:outputLabel value="x"/>
                        <h:inputText value="#{annotationForm.current.x}" required="true"/>

                        <h:outputLabel value="y"/>
                        <h:inputText value="#{annotationForm.current.y}" required="true"/>

                        <h:outputLabel value="w"/>
                        <h:inputText value="#{annotationForm.current.w}" required="true"/>

                        <h:outputLabel value="h"/>
                        <h:inputText value="#{annotationForm.current.h}" required="true"/>

                        <p:outputPanel>
                            <p:commandButton value="Delete" action="#{annotationForm.delete}" process="@this"
                                             update="@form :scriptContainer"/>
                            <p:commandButton id="saveButton" value="Save" action="#{annotationForm.save}" process="@this"
                                             update="@form :scriptContainer"/>
                        </p:outputPanel>
                    </p:panelGrid>

                    <p:defaultCommand target="saveButton" />

                </h:panelGroup>
            </div>
        </div>


    </h:form>


    <!--hidden form to execute remote commands-->
    <h:form prependId="false" style="visibility: hidden">
        <p:remoteCommand name="createNewAnnotationBridge" actionListener="#{annotator.createNewAnnotation}"
                         update="@none" process="@this"
                         oncomplete="onAnnotationCreateComplete(xhr,status,args);"/>

        <p:remoteCommand name="selectAnnotationBridge" actionListener="#{annotationForm.selectAnnotation}"
                         update=":sideForm:annotationInputContainer" process="@this"/>
    </h:form>

</ui:define>

<ui:define name="script">
    <h:outputScript name="annotate.js"/>

    <h:panelGroup id="scriptContainer">

        <script>
            //                annotations are in the following JSON format
            //                var annotations = [
            //                    {
            //                        id: 'asdasdasd',
            //                        'x': 10,
            //                        'y': 20,
            //                        'w': 100,
            //                        'h': 200,
            //                        'textData': {
            //                            'tr_latin': 'Kolay',
            //                            'tr_arabic': ' الف'
            //                        }
            //                    },
            //                    {
            //                        id: 'asdasdasd2',
            //                        'x': 20,
            //                        'y': 30,
            //                        'w': 400,
            //                        'h': 400,
            //                        'textData': {
            //                            'tr_latin': 'Kolay2',
            //                            'tr_arabic': '2 الف'
            //                        }
            //                    }
            //                ];

            var imageSource = "/getImage?fileId=#{annotatorData.currentFileId}&amp;pageNumber=#{annotatorData.currentPageNumber}";

            var annotations = #{annotator.annotationsJSONForCurrentFileAndPage};

            function createNewAnnotation(x, y, w, h, textData) {
                // sample text data:
                //{
                //    'tr_latin' : 'Kolay',
                //    'tr_arabic' : ' الف'
                //}
                createNewAnnotationBridge([
                    {name: 'x', value: x},
                    {name: 'y', value: y},
                    {name: 'w', value: w},
                    {name: 'h', value: h},
                    {name: 'tr_latin', value: textData.tr_latin},
                    {name: 'tr_arabic', value: textData.tr_arabic}
                ]);
            }

            function selectAnnotation(annotationId) {
                selectAnnotationBridge([
                    {name: 'annotationId', value: annotationId}
                ]);
            }

            function updateAnotation(annotationId, textData) {
                console.log(annotationId);
                console.log(textData)
            }

            function deleteAnnotation(annotationId) {
                console.log(annotationId);
            }

            function onAnnotationCreateComplete(xhr, status, args) {
                if (args.annotationId) {
                    annotator.addAnnotationFromCurrentOne(args.annotationId);
                } else {
                    alert('Creation failed');
                }
            }

            $(document).ready(function () {
                window['annotator'] = new Annotator({
                    'canvasId': 'annotationCanvas',
                    'imageSource': imageSource,
                    'onAnnotationCreate': createNewAnnotation,
                    'onAnnotationSelect': selectAnnotation,
                    'annotations': annotations
                });

            });
        </script>
    </h:panelGroup>
</ui:define>

</ui:composition>